<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Grade Test"
           tests="26"
           failures="1"
           errors="0"
           skipped="0"
           time="0.956">
    <properties></properties>

            <testcase
                name="testMark"
                time="0.148"
                classname="Example2Test">

            <failure type="java.lang.AssertionError" message="expected [Invalid] but found [Excellent]">
                <![CDATA[java.lang.AssertionError: expected [Invalid] but found [Excellent]
                org.testng.Assert.fail(Assert.java:110)org.testng.Assert.failNotEquals(Assert.java:1577)org.testng.Assert.assertEqualsImpl(Assert.java:149)org.testng.Assert.assertEquals(Assert.java:131)org.testng.Assert.assertEquals(Assert.java:655)org.testng.Assert.assertEquals(Assert.java:665)Example2Test.testMark(Example2Test.java:48)java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)java.base/java.lang.reflect.Method.invoke(Method.java:578)org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)java.base/java.util.ArrayList.forEach(ArrayList.java:1511)org.testng.TestRunner.privateRun(TestRunner.java:829)org.testng.TestRunner.run(TestRunner.java:602)org.testng.SuiteRunner.runTest(SuiteRunner.java:437)org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </failure>
    </testcase>


            <testcase
                name="testMark"
                time="0.026"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.022"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.004"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.002"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.012"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.077"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.030"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.003"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.017"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.029"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.004"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.027"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.004"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.002"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.004"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.022"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.010"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.021"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.002"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.004"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.062"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.014"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.203"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.005"
                classname="Example2Test">
            </testcase>
            <testcase
                name="testMark"
                time="0.202"
                classname="Example2Test">
            </testcase>
</testsuite>
